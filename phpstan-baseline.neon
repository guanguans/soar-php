parameters:
	ignoreErrors:
		-
			message: '#^Call to function function_exists\(\) with callable\-string will always evaluate to true\.$#'
			identifier: function.alreadyNarrowedType
			count: 1
			path: src/Soar.php

		-
			message: '#^Call to function is_array\(\) with list\<string\> will always evaluate to true\.$#'
			identifier: function.alreadyNarrowedType
			count: 2
			path: src/Soar.php

		-
			message: '#^Call to method onlyHelp\(\) on an unknown class Guanguans\\SoarPHP\\Concerns\\HasOptions\.$#'
			identifier: class.notFound
			count: 1
			path: src/Soar.php

		-
			message: '#^Call to method onlyVersion\(\) on an unknown class Guanguans\\SoarPHP\\Concerns\\HasOptions\.$#'
			identifier: class.notFound
			count: 1
			path: src/Soar.php

		-
			message: '#^Call to method run\(\) on an unknown class Guanguans\\SoarPHP\\Concerns\\HasOptions\.$#'
			identifier: class.notFound
			count: 3
			path: src/Soar.php

		-
			message: '#^Call to method scores\(\) on an unknown class Guanguans\\SoarPHP\\Concerns\\HasOptions\.$#'
			identifier: class.notFound
			count: 3
			path: src/Soar.php

		-
			message: '#^Calling var_dump\(\) is forbidden, use some logger instead\.$#'
			identifier: disallowed.function
			count: 1
			path: src/Soar.php

		-
			message: '#^Result of && is always false\.$#'
			identifier: booleanAnd.alwaysFalse
			count: 2
			path: src/Soar.php

		-
			message: '#^Unused result of "and" operator\.$#'
			identifier: logicalAnd.resultUnused
			count: 3
			path: src/Soar.php

		-
			message: '#^Unused result of "and" operator\.$#'
			identifier: logicalAnd.resultUnused
			count: 1
			path: src/Support/ComposerScript.php

		-
			message: '#^Method Guanguans\\SoarPHP\\Support\\Rectors\\ToInternalExceptionRector\:\:refactor\(\) never returns array\<PhpParser\\Node\> so it can be removed from the return type\.$#'
			identifier: return.unusedType
			count: 1
			path: src/Support/Rectors/ToInternalExceptionRector.php

		-
			message: '#^Method Guanguans\\SoarPHP\\Support\\Rectors\\ToInternalExceptionRector\:\:refactor\(\) never returns null so it can be removed from the return type\.$#'
			identifier: return.unusedType
			count: 1
			path: src/Support/Rectors/ToInternalExceptionRector.php

		-
			message: '#^Call to function method_exists\(\) with ''Symfony\\\\Component\\\\Process\\\\Process'' and ''escapeArgument'' will always evaluate to true\.$#'
			identifier: function.alreadyNarrowedType
			count: 1
			path: src/Support/helpers.php
